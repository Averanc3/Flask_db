{
	"info": {
		"_postman_id": "e11a79da-bf2c-447c-bab6-3fa2c22ac678",
		"name": "Flask_API_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get_data car_color",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set('randnum1', Math.floor(Math.random() * 30));",
							"pm.environment.set('randnum2', Math.floor(Math.random() * 30));",
							"pm.environment.set('randnum3', Math.floor(Math.random() * 30));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serv}}/get_data?table=car_color&limit={{randnum1}}",
					"host": [
						"{{serv}}"
					],
					"path": [
						"get_data"
					],
					"query": [
						{
							"key": "table",
							"value": "car_color"
						},
						{
							"key": "limit",
							"value": "{{randnum1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_data car_speed",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randnum2 = pm.environment.get(\"randnum2\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serv}}/get_data?table=car_speed&limit={{randnum2}}",
					"host": [
						"{{serv}}"
					],
					"path": [
						"get_data"
					],
					"query": [
						{
							"key": "table",
							"value": "car_speed"
						},
						{
							"key": "limit",
							"value": "{{randnum2}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_data cars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"",
							"",
							"randnum3 = pm.environment.get(\"randnum3\")",
							"console.log(randnum3)",
							"randnn = Math.floor(Math.random() * randnum3)",
							"console.log(randnn)",
							"console.log(pm.response.json()[randnn].brand)",
							"",
							"pm.test('Column brand shows correct-type data', function(){",
							"    pm.expect(pm.response.json()[randnn].brand).to.be.a('string');",
							"}) ",
							"",
							"pm.test('Column model shows correct-type data', function(){",
							"    pm.expect(pm.response.json()[randnn].brand).to.be.a('string');",
							"}) ",
							"",
							"pm.test('Column color_id data is correct-type and in the range of acceptable values', function(){",
							"    pm.expect(pm.response.json()[randnn].color_id).to.be.a('number').and.to.be.below(31);",
							"}) ",
							"pm.test('Column id data is correct-type and in the range of acceptable values', function(){",
							"    pm.expect(pm.response.json()[randnn].color_id).to.be.a('number').and.to.be.below(31);",
							"}) ",
							"",
							"pm.test('Column speed_id data is correct-type and in the range of acceptable values', function(){",
							"    pm.expect(pm.response.json()[randnn].color_id).to.be.a('number').and.to.be.below(31);",
							"}) ",
							"",
							"pm.test('Number of results in response equals the requested', function(){",
							"    pm.expect(pm.response.json().length).to.be.eql(randnum3);",
							"}) ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serv}}/get_data?table=cars&limit={{randnum3}}",
					"host": [
						"{{serv}}"
					],
					"path": [
						"get_data"
					],
					"query": [
						{
							"key": "table",
							"value": "cars"
						},
						{
							"key": "limit",
							"value": "{{randnum3}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "serv",
			"value": "http://23.88.52.139:5041",
			"type": "string"
		}
	]
}